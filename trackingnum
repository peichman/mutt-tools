#!/usr/bin/perl -w
use strict;

# to use with arbitrary email messages, should first pipe
# through mailbody first:
# $ mailbody < email-message | trackingnum

# URLs for different carriers
my %url_pattern_for = (
    USPS  => "https://tools.usps.com/go/TrackConfirmAction_input?origTrackNum=%s",
    UPS   => "http://wwwapps.ups.com/ietracking/tracking.cgi?tracknum=%s",
    DHL   => "http://webtrack.dhlglobalmail.com/?trackingnumber=%s",
    LS    => "http://lasership.com/track/%s",
    FedEx => "http://www.fedex.com/Tracking?tracknumbers=%s",
    UPSMI => "http://www.ups-mi.net/packageID/PackageID.aspx?PID=%s",
);

while (<>) {
    if (/\b(9\d{21})\b/) {
        # USPS
        print sprintf($url_pattern_for{USPS}, $1), "\n";
        exit;
    } elsif (/\b(1Z[A-Z0-9]{16})\b/) {
        # UPS
        print sprintf($url_pattern_for{UPS}, $1), "\n";
        exit;
    } elsif (/\b(\d{20})\b/) {
        # DHL
        print sprintf($url_pattern_for{DHL}, $1), "\n";
        exit;
    } elsif (/\b(1LS\d{12})\b/ or /\b(BN\d{20})\b/) {
        # LaserShip
        print sprintf($url_pattern_for{LS}, $1), "\n";
        exit;
    } elsif (/\b(0\d{14})\b/) {
        # FedEx
        print sprintf($url_pattern_for{FedEx}, $1), "\n";
        exit;
    } elsif (/\b(59\d{10})\b/) {
        # FedEx
        print sprintf($url_pattern_for{FedEx}, $1), "\n";
        exit;
    } elsif (/\b(\d{30})\b/ or /\b(\d{26})\b/) {
        # UPS Mail Innovations
        print sprintf($url_pattern_for{UPSMI}, $1), "\n";
        exit;
    }
}

warn "No tracking numbers found.\n";
